public class Solution {
    public int SearchInsert(int[] nums, int target) {
        int index = 0;
        if(nums[nums.Length - 1] <  target)
        {
            return nums.Length;
        }
            for(int i=0;i<nums.Length;i++)
            {
                if(nums[i] == target)
                {
                    index = Array.IndexOf(nums, nums[i]); // returns 4
                    break;
                }
                else if(nums[i] > target)
                {
                    index = Array.IndexOf(nums, nums[i]); // returns 4
                    break;
                }
            }
        return index;
        }
    }
    
    Example 1:

Input: [1,3,5,6], 5
Output: 2
Example 2:

Input: [1,3,5,6], 2
Output: 1
Example 3:

Input: [1,3,5,6], 7
Output: 4
Example 4:

Input: [1,3,5,6], 0
Output: 0
